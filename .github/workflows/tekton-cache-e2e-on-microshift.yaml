name: Tekton Caches E2E Tests on Microshift

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  e2e-tests-microshift:
    name: Run E2E Tests on Microshift
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false

    env:
      SHELL: /bin/bash
      GOPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: ${{ github.workspace }}/src/github.com/openshift-pipelines/tekton-caches

      - name: Install Tekton CLI (tkn)
        run: |
          TKN_VERSION="0.41.0"
          curl -LO https://github.com/tektoncd/cli/releases/download/v${TKN_VERSION}/tkn_${TKN_VERSION}_Linux_x86_64.tar.gz
          tar -xzf tkn_${TKN_VERSION}_Linux_x86_64.tar.gz -C /usr/local/bin tkn
          tkn version
      

      - uses: ko-build/setup-ko@v0.6

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          cache-dependency-path: "${{ github.workspace }}/src/github.com/openshift-pipelines/tekton-caches/go.sum"
          go-version-file: "${{ github.workspace }}/src/github.com/openshift-pipelines/tekton-caches/go.mod"

      - name: Setup Microshift
        run: |
          curl -L -o minc  https://github.com/minc-org/minc/releases/latest/download/minc_linux_amd64
          chmod +x minc
          ./minc config set provider docker
          ./minc create --log-level debug
          echo "Microshift is running"

      - name: Install Tekton Caches and Run e2e tests
        working-directory: ${{ github.workspace }}/src/github.com/openshift-pipelines/tekton-caches
        run: |
          wget https://github.com/okd-project/okd/releases/download/4.19.0-okd-scos.6/openshift-client-linux-amd64-rhel9-4.19.0-okd-scos.6.tar.gz
          tar -xzvf openshift-client-linux-amd64-rhel9-4.19.0-okd-scos.6.tar.gz
          export PATH=${PATH}:${PWD}
          #
          #          oc adm policy add-scc-to-user anyuid -z tekton-pipelines-controller
          #          oc adm policy add-scc-to-user anyuid -z tekton-pipelines-webhook
          
          export KUBECONFIG=$HOME/.kube/config
          source ${{ github.workspace }}/src/github.com/openshift-pipelines/tekton-caches/tests/crc_test.sh
